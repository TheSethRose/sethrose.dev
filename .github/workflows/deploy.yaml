# Trigger the workflow on pushes to the master branch or manually
name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master
  workflow_dispatch:

# Set permissions for the job
permissions:
  contents: read
  pages: write
  id-token: write

# Ensure only one deployment runs at a time and cancel any in-progress deployments
concurrency:
  group: "pages"
  cancel-in-progress: true

# Set default shell for all run steps
defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.124.0
    steps:
      # Install Hugo CLI
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      # Install Dart Sass for SCSS support
      - name: Install Dart Sass
        run: sudo snap install dart-sass

      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      # Configure GitHub Pages
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      # Install Node.js dependencies if needed
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      # Build the Hugo site with production settings
      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      # Upload the generated site as an artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deploy the site to GitHub Pages
  deploy:
    # Add dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
